{"version":3,"sources":["component/header.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","TopMenu","state","current","handleClick","e","console","log","setState","key","className","justify","span","onClick","this","selectedKeys","mode","Item","HomeOutlined","ProfileOutlined","to","profile","title","SettingOutlined","ItemGroup","React","Component","Header","Layout","Footer","Content","preventDefault","App","class","style","padding","background","textAlign","offset","autoplay","alt","src","href","closable","onClose","paddingLeft","color","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sWAUUA,EAAYC,IAAZD,QAmDKE,E,2MAhDXC,MAAQ,CACNC,QAAS,Q,EAGXC,YAAc,SAAAC,GACZC,QAAQC,IAAI,SAAUF,GACtB,EAAKG,SAAS,CACZL,QAASE,EAAEI,O,wEAKb,OACE,yBAAKC,UAAU,kBACT,kBAAC,IAAD,CAAKC,QAAQ,iBACT,kBAAC,IAAD,CAAKC,KAAM,GACP,wCAEJ,kBAAC,IAAD,CAAKA,KAAM,GACC,kBAAC,IAAD,CAAMC,QAASC,KAAKV,YAAaW,aAAc,CAACD,KAAKZ,MAAMC,SAAUa,KAAK,cACxE,kBAAC,IAAKC,KAAN,CAAWR,IAAI,QACb,kBAACS,EAAA,EAAD,MADF,WAIA,kBAAC,IAAKD,KAAN,CAAWR,IAAI,OACb,kBAACU,EAAA,EAAD,MACA,kBAAC,IAAD,CAAMC,GAAG,WAAWN,KAAKZ,MAAMmB,UAEjC,kBAACtB,EAAD,CACEuB,MACE,0BAAMZ,UAAU,yBACd,kBAACa,EAAA,EAAD,MADF,eAMF,kBAAC,IAAKC,UAAN,KACE,kBAAC,IAAKP,KAAN,CAAWR,IAAI,aAAf,sB,GAtCZgB,IAAMC,W,SCHpBC,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAGxB,SAASvB,EAAIF,GACXC,QAAQC,IAAIF,GAGd,SAAS0B,EAAe1B,GACtBA,EAAE0B,iBACFzB,QAAQC,IAAI,iCA+FDyB,MA7Ef,WACE,OACE,yBAAKC,MAAO,OACV,kBAAC,IAAD,KACE,kBAACN,EAAD,CAASO,MAAO,CAACC,QAAQ,GAAIC,WAAW,UACtC,kBAAC,EAAD,WAGF,kBAACN,EAAD,CAASI,MAAO,CAACC,QAAQ,GAAIE,UAAW,SAAUD,WAAW,YAC3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKxB,KAAM,IACT,yBAAKF,UAAW,QAChB,wBAAIwB,MAAO,CAACG,UAAW,WAAvB,mBAEA,2BAAG,6BAAH,wfAMF,kBAAC,IAAD,CAAMzB,KAAM,GAAI0B,OAAQ,GACpB,kBAAC,IAAD,CAAUC,UAAQ,GAChB,6BACE,yBAAKC,IAAI,OAAOC,IAAI,iBAEtB,6BACE,yBAAKD,IAAI,YAAYC,IAAI,iBAE3B,6BACA,yBAAKD,IAAI,cAAcC,IAAI,iBAE3B,6BACA,yBAAKD,IAAI,YAAYC,IAAI,qBAQnC,kBAACX,EAAD,KACE,kBAAC,IAAD,CAAKlB,KAAM,IACT,yBAAKF,UAAU,SACb,iDACE,qZAKA,6BACF,6BACQ,kBAAC,IAAD,KACE,uBAAGgC,KAAK,uDAAR,iBACR,kBAAC,IAAD,KACE,uBAAGA,KAAK,wDAAR,YAEF,kBAAC,IAAD,CAAKC,UAAQ,EAACC,QAASrC,GAAvB,QAGA,kBAAC,IAAD,CAAKoC,UAAQ,EAACC,QAASb,GAAvB,aAOR,kBAACD,EAAD,CAASI,MAAO,CAACW,YAAY,MAG7B,kBAAChB,EAAD,CAAQK,MAAO,CAACG,UAAW,SAAUD,WAAW,UAAWU,MAAO,YAAlE,cC7FYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzD,QAAQyD,MAAMA,EAAMC,c","file":"static/js/main.9dbe0540.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Menu } from 'antd';\r\nimport { Row, Col} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    HomeOutlined,\r\n    ProfileOutlined,\r\n    SettingOutlined,\r\n  } from '@ant-design/icons';\r\n  \r\n  const { SubMenu } = Menu;\r\n\r\n  class TopMenu extends React.Component {\r\n    state = {\r\n      current: 'home',\r\n    };\r\n  \r\n    handleClick = e => {\r\n      console.log('click ', e);\r\n      this.setState({\r\n        current: e.key,\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"menu-container\">\r\n              <Row justify=\"space-between\">\r\n                  <Col span={4}>\r\n                      <h1>Jogjaku</h1>\r\n                  </Col>\r\n                  <Col span={8}>\r\n                              <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n                                <Menu.Item key=\"mail\">\r\n                                  <HomeOutlined />\r\n                                  Beranda\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"app\">\r\n                                  <ProfileOutlined />\r\n                                  <Link to='/profil'>{this.state.profile}</Link>\r\n                                </Menu.Item>\r\n                                <SubMenu\r\n                                  title={\r\n                                    <span className=\"submenu-title-wrapper\">\r\n                                      <SettingOutlined />\r\n                                      Pengaturan\r\n                                    </span>\r\n                                  }\r\n                                >\r\n                                  <Menu.ItemGroup>\r\n                                    <Menu.Item key=\"setting:1\">Tampilan</Menu.Item>\r\n                                  </Menu.ItemGroup>\r\n                                </SubMenu>\r\n                              </Menu>\r\n                  </Col>\r\n              </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default TopMenu","import React from 'react';\nimport './App.css';\nimport {Layout, Row, Col, Carousel } from 'antd';\nimport TopMenu from './component/header';\nimport { Tag } from 'antd';\n\n\n\n\n  const { Header, Footer, Content } = Layout;\n\n\n  function log(e) {\n    console.log(e);\n  }\n  \n  function preventDefault(e) {\n    e.preventDefault();\n    console.log('Clicked! But prevent default.');\n  }\n\n  const wisataPoint = [\n    {\n      source: 'require(\"./img/1.jpg\")',\n      \n    },\n    {\n      source: 'require(\"./img/2.jpg\")',\n      \n    },\n    {\n      source: 'require(\"./img/3.jpg\")',\n    \n    },\n  ]\n\nfunction App(){\n  return(\n    <div class= \"App\">\n      <Layout>\n        <Header  style={{padding:10, background:'white'}}>\n          <TopMenu> </TopMenu>\n        </Header>\n\n        <Content style={{padding:10, textAlign: 'center', background:'#d9bf77' }}>\n          <Row>\n            <Col span={10} >\n              <div className= \"text\" >\n              <h3 style={{textAlign: 'center'}}> \n              Kota Yogyakarta</h3>\n              <p><br></br>Yogyakarta (sering juga disebut Yogya, Jogjakarta, atau Jogja) adalah destinasi wisata paling populer di Indonesia setelah Bali \n                          Bagi banyak orang Indonesia, Jogja adalah semacam kampung halaman kedua. Mungkin karena ratusan ribu orang pernah tinggal di sini bertahun-tahun ketika kuliah. Mungkin juga karena semua orang diterima seperti di rumah sendiri ketika di Yogyakarta. Joko Pinurbo, penyair terkemuka Indonesia, mengatakannya dengan indah, \"Yogya terbuat dari rindu, pulang, dan angkringan.\"</p>\n              </div>\n              \n            </Col>\n          \n            <Col  span={12} offset={2}>\n                <Carousel autoplay>\n                  <div >\n                    <img alt=\"Tugu\" src='./img/1.jpg' />\n                  </div>\n                  <div>\n                    <img alt=\"Malioboro\" src=\"./img/2.jpg\"/>\n                  </div>\n                  <div>\n                  <img alt=\"wedangronde\" src=\"./img/3.jpg\"/>\n                  </div>\n                  <div>\n                  <img alt=\"tamansari\" src=\"./img/4.jpg\"/>\n                  </div>\n                </Carousel>\n            </Col>\n          </Row>\n        </Content>\n\n\n        <Content>\n          <Col span={12}>\n            <div className=\"text2\">\n              <h3>Wisata Yogyakarta</h3>\n                <p>Pariwisata di Jogja selalu meningkat disetiap tahunnya.\n                  Jogja menjadi magnet bagi para wisatawan baik dari manca ataupun domestik\n                  untuk selalu rindu berlibur ke Jogja. Ada banyak alasan mengapa wisatawan senang menghabiskan waktu liburan di Jogja,\n                  yaitu Biaya murah,transportasi mudah, banyak kuliner, banyak spot wisata alam,Budaya,Pendidikan,Sejarah dan masih banyak lagi. \n                </p>\n                <br></br>\n              <div>\n                      <Tag>\n                        <a href=\"https://garasijogja.com/tempat-wisata-jogja-terbaru\"> Wisatajogja</a></Tag>\n                <Tag>\n                  <a href=\"https://github.com/ant-design/ant-design/issues/1862\">Kuliner</a>\n                </Tag>\n                <Tag closable onClose={log}>\n                  kota\n                </Tag>\n                <Tag closable onClose={preventDefault}>\n                  jogja\n                </Tag>\n              </div>\n            </div>\n          </Col>\n        </Content>\n        <Content style={{paddingLeft:20}}>\n        </Content>\n      \n        <Footer style={{textAlign: 'center', background:'#d9bf77', color: '#ffffff' }}>\n          Jogjaku \n        </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}